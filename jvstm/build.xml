<?xml version="1.0" encoding="ISO-8859-1"?>
<project basedir="." default="compile" name="jvstm Build File">

  <property name="src.dir" location="src/main/java"/>
  <property name="dist.dir" location="target"/>
  <property name="build.dir" location="${dist.dir}/classes"/>
  <property name="src.dist.dir" location="src-dist"/>
  <property name="lib.dir" location="lib"/>
  <property name="src.test.dir" location="src/test"/>  
  <property name="build.test.dir"  location="target/test-classes"/>
  <property name="build.test.reports" location="target/test-reports"/>
  <property name="dist.version" value="1.0-SNAPSHOT"/>
  <property name="jar.file" value="${dist.dir}/jvstm-${dist.version}.jar"/>

  <path id="project.class.path">
    <pathelement path="${build.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="clean-all" description="Removes any generated files">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${src.dist.dir}"/>
  </target>

  <target name="compile" description="Compiles the jvstm source">
    <mkdir dir="${build.dir}"/>
    <javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" extdirs="${lib.dir}" target="1.5" debug="on"/>
    <!--<java classname="jvstm.atomic.GenerateAtomicInstance" fork="true">
      <arg value="${build.dir}"/>
      <classpath refid="project.class.path"/>
    </java>-->
    <java classname="pt.ist.esw.atomicannotation.ProcessAtomicAnnotations" fork="true">
      <arg value="${build.dir}"/>
      <classpath refid="project.class.path"/>
    </java>
  </target>

  <target name="src-dist" description="Builds a source distribution">
    <tstamp/>
    <property name="jvstm.src.dist.dir" location="${src.dist.dir}/jvstm-${DSTAMP}"/>
    <mkdir dir="${jvstm.src.dist.dir}"/>
    <copy todir="${jvstm.src.dist.dir}/src">
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </copy>
    <copy todir="${jvstm.src.dist.dir}/lib">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy file="LICENSE.txt" todir="${jvstm.src.dist.dir}"/>
    <copy file="build.xml" todir="${jvstm.src.dist.dir}"/>
    <jar destfile="jvstm-src-${DSTAMP}.jar" basedir="${src.dist.dir}"/>
  </target>


  <target name="jar" depends="compile" description="Generates the jar with the jvstm">
    <mkdir dir="${dist.dir}"/>
    <jar destfile="${jar.file}" basedir="${build.dir}"/>
  </target>

  
   <!--++++++++++ Targets Test ++++++++++-->
      
  <target name="compile-test" depends="compile" description="Compiles the test source" >
  <mkdir dir="${build.test.dir}"/>
    <javac  debug="true"
            debugLevel="source"
            srcdir="${src.test.dir}"
            destdir="${build.test.dir}"
            includeantruntime="true">
      <classpath>
        <pathelement location="${build.dir}"/>
        <path refid="project.class.path" />
      </classpath>
    </javac>
  </target>
  
  <target name="test" depends="compile-test" description="Runs the tests">
    <mkdir dir="${build.test.reports}"/>
    <junit printsummary="yes" haltonfailure="true" showoutput="true" >
      <classpath>
        <pathelement location="${build.dir}"/>
        <pathelement location="${build.test.dir}"/>
        <path refid="project.class.path" />
      </classpath>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${build.test.reports}" >
        <fileset dir="${src.test.dir}">
            <include name="**/*Test*.java"/>
        </fileset>
        <formatter type="xml"/>
        <formatter type="plain" usefile="false" />
      </batchtest>
    </junit>
  </target>

</project>
